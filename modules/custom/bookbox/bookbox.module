<?php

module_load_include('inc', 'bookbox', 'bookbox.functions');
module_load_include('inc', 'bookbox', 'bookbox.forms');
module_load_include('inc', 'bookbox', 'bookbox.cart');
module_load_include('inc', 'bookbox', 'bookbox.readnow');
module_load_include('inc', 'bookbox', 'bookbox.adminmessages');

function bookbox_menu(){
  $items=array();
  
  $items['admin/bookbox/labels'] = array(
      'title' => 'Адмін-тексти',
      'description' => 'Admin labels',
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('bookbox_admin_labels_form'),
      'access arguments' => array('access adminstration page'),
      'access callback' => TRUE,
  );

  $items['user/%user/orders'] = array(
      'title' => 'Історія замовлень',
      'page callback' => 'bookbox_user_orders_history',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

function bookbox_block_info() {
  $blocks = array();

  $blocks['MiniCart'] = array(
    'info' => t('Mini cart'),
  );

  $blocks['ReadingNow'] = array(
      'info' => t('Reading now'),
  );

  return $blocks;
}

function bookbox_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'MiniCart':
      $block['subject'] = '';
      $form = drupal_get_form('bookbox_mini_cart_block');
      $block['content'] = drupal_render($form);
      break;

    case 'ReadingNow':
      $block['subject'] = '';
      $form = drupal_get_form('bookbox_reading_now_block');
      $block['content'] = drupal_render($form);
      break;
  }

  return $block;
}

function bookbox_form_commerce_cart_add_to_cart_form_alter(&$form, &$form_state) {
  // можно добавить максимум 2

  $form['submit']['#value'] = 'Замовити';

  $in_cart = 0;

  if (isset($form['product_id'])) {
    $form_product = $form['product_id']['#value'];
    $can_add2cart = true;
  } else {
    $form_product = null;
    $can_add2cart = false;
  }

  $wrapper = _bookbox_get_cart_items();

  //что-то есть в корзине
  if ($wrapper) {
    foreach ($wrapper->commerce_line_items as $delta => $line_item_wrapper) {
      $cart_product = $line_item_wrapper->commerce_product->value()->product_id;
      $in_cart = $in_cart + 1;

      if($form_product == $cart_product) {
        $can_add2cart = false; // если эта книга уже в корзине, то нечего ее добавлять, ок, да?
        break;
      }
    }
  }

  if ($in_cart == 2) {
    $can_add2cart = false;
  }

  if (!$can_add2cart) {
    $form['submit']['#attributes']['disabled'] = TRUE;
  }
}

// Крон работы
function bookbox_cron() {
  if(intval(d()) == 1) {
    $result = db_select('commerce_order', 'o')
        ->fields('o', array('order_id', 'status', 'changed'))
        ->condition(
            db_or()
                ->condition('o.status', 'completed')
                ->condition('o.status', 'prolong')
        )
        ->orderBy('o.order_id', 'DESC')
        ->execute()->fetchAll();
    
    foreach ($result as $item) {
      $order_month = intval(date('m', $item->changed));
      //1-го числа мы удаляем все книги из "я читаю" если они были заказаны в прошлом месяце - меняем статус на архив
      if($item->status == 'completed' && $order_month < intval(m())) {
        //dsm('в архив!');
        $order = commerce_order_load($item->order_id);
        commerce_order_status_update($order, 'archive', $skip_save = FALSE, $revision = NULL, $log = '');
      }

      //1-го числа мы меняем статус всех книг "пролонг" из "я читаю" на "подтверждено" и меняем дату так как будто они были подтверждены в этом месяце
      if($item->status == 'prolong' && $order_month < intval(m())) {
        db_update('commerce_order')
            ->fields(array('changed' => time ()))
            ->fields(array('status' => 'completed'))
            ->condition('order_id', $item->order_id)
            ->execute();
      }
    }

    $result = db_select('users', 'u')
        ->fields('u', array('uid', 'mail'))
        ->condition('u.send1', 0)
        ->execute()->fetchAll();

    foreach ($result as $item) {
      //dsm($item);
      drupal_mail('system', 'mail', $item->mail, language_default(), array(
          'context' => array(
              'subject' => 'Ви підтвердили книги',
              'message' => 'Hello, its 1 day of month',
          )));

      db_update('users')
          ->fields(array('send1' => 1))
          ->condition('uid', $item->uid)
          ->execute();
      
    }
  }

  if(intval(d()) == 2) {
    db_update('users')
        ->fields(array('send1' => 1))
        //->condition('send1', $item->uid)
        ->execute();
  }

  if(intval(d()) == 19) {

  }

  //Мейл рассылка:
}

function bookbox_user_orders_history() {
  global $user;
  $content = '<h1>Історія замовлень</h1>';

  $result = db_select('commerce_order', 'o')
      ->fields('o', array('order_id', 'changed'))
      ->condition('o.uid', $user->uid)
      ->condition('o.status', 'archive')
      ->orderBy('o.order_id', 'DESC')
      ->execute()->fetchAll();

  foreach ($result as $res) {
    $order = commerce_order_load($res->order_id);
    $line_item_id = $order->commerce_line_items['und'][0]['line_item_id'];
    $line_item = commerce_line_item_load($line_item_id);
    $product_id =  $line_item->commerce_product['und'][0]['product_id'];
    $product_display = _bookbox_get_product_display_by_product_id($product_id);

    if ($product_display->nid) {
      setlocale(LC_TIME, 'uk_UA');
      $dateM = ua_month_original(intval(date('m', $res->changed))-1);
      $dateY = date('Y', $res->changed);
      $content = $content . '<h2>' . $dateM . ' ' . $dateY . '</h2>';

      $node = node_load($product_display->nid);
      $node_view = node_view($node, 'teaser');
      $rendered_teaser = render($node_view);
      $content = $content . $rendered_teaser;
    }
  }

  return $content;
}
