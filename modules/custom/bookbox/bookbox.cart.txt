<?php
// Блок корзины
function bookbox_mini_cart_block($form, &$form_state) {
    global $user;
    $uid = $user->uid;
    $destination = request_path();
    $max_books = variable_get('varMaxBooks') - bookbox_count_in_confirm($uid) - bookbox_count_in_reading_now($uid);
    $can_order_text = '';

    switch ($max_books) {
        case 1:
            $can_order_text = $max_books . ' книгу';
            break;
        case 2:
        case 3:
        case 4:
            $can_order_text = $max_books . ' книги';
            break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
            $can_order_text = $max_books . ' книжок';
            break;
    }

    if (bookbox_count_in_confirm($uid) > 0) {
        $form['ftitle'] = array(
            '#type' => 'markup',
            '#markup' => '<h3>Додайте до замовленя</h3><h6>Ви можете замовити ' . $can_order_text . '</h6>',
        );
    } else {
        $form['ftitle'] = array(
            '#type' => 'markup',
            '#markup' => '<h3>Зробіть замовленя</h3><h6>Ви можете замовити ' . $can_order_text . '</h6>',
        );
    }

    $wrapper = _bookbox_get_cart_items();
    $cart_count = 0;

    if ($wrapper) {
        foreach ($wrapper->commerce_line_items as $delta => $line_item_wrapper) {
            $cart_product = $line_item_wrapper->commerce_product->value()->product_id;
            $product_display = _bookbox_get_product_display_by_product_id($cart_product);
            if ($product_display->nid) {
                $cart_count = $cart_count + 1;
                $node = node_load($product_display->nid);
                $node_view = node_view($node, 'teaser');
                $rendered_teaser = render($node_view);
                $form['bms' . $cart_count] = array(
                    '#type' => 'markup',
                    '#markup' => '<div class="book-container">',
                );
                $form['book_' . $cart_count] = array(
                    '#type' => 'markup',
                    '#markup' => $rendered_teaser,
                );
                $form['del_from_cart_submit' . $cart_count] = array(
                    '#type' => 'submit',
                    '#submit' => array('bookbox_delete_bookfromcart' . $cart_count),
                    '#value' => 'видалити' . $cart_count,
                );
                $form['bme' . $cart_count] = array(
                    '#type' => 'markup',
                    '#markup' => '</div>',
                );
            }
        }
    }

    if ($cart_count > 0 && bookbox_count_in_confirm($uid) + bookbox_count_in_reading_now($uid) < variable_get('varMaxBooks')) {
        $modal = '<button type="button" id="edit-submit-box" class="btn btn-primary" data-toggle="modal" data-target="#confirm-orders">Підтвердити замовлення</button>
                            <div class="modal fade" tabindex="-1" role="dialog" id="confirm-orders">
                                      <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                          <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                          </div>
                                          <div class="modal-body">
                                            <p>Бажаєте підтвердити замовлення?</p>
                                            <p class="smaller">Змінити замовлення після підтвердження буде неможливо.</p>
                                          </div>
                                          <div class="modal-footer">
                                            <a class="btn btn-outline red" href="/confirm/' . $uid . '/orders?destination=' . $destination . '">Так</a>
                                            <button type="button" class="btn btn-outline red" data-dismiss="modal">Ні</button>
                                          </div>
                                        </div>
                                      </div>
                                    </div>';

        $form['confirmordersprolongmarkup'] = array(
            '#type' => 'markup',
            '#markup' => $modal,
        );
    }
    return $form;
}

function bookbox_delete_bookfromcart1 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][0]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart2 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][1]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart3 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][2]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart4 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][3]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart5 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][4]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart6 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][5]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart7 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][6]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart8 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][7]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart9 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][8]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

function bookbox_delete_bookfromcart10 ($form, &$form_state) {
    global $user;
    $order = commerce_cart_order_load($user->uid);
    $line_item = $order->commerce_line_items['und'][9]['line_item_id'];
    commerce_cart_order_product_line_item_delete($order, $line_item);
    commerce_cart_order_refresh($order);
}

//old code for confirm from cart
function bookbox_confirm_box($arg0) {
    $user = user_load($arg0);
    $user_name = $user->field_name['und'][0]['value'] . ' ' . $user->field_sirname['und'][0]['value'];
    $time = variable_get('varTestDayTime'); //todo delete from test

    $order = commerce_cart_order_load($user->uid);
    $order_count = count($order->commerce_line_items['und']);

    $order_products = array ();

    for ($i = 0; $i < $order_count; $i++) {
        $line_item_id = $order->commerce_line_items['und'][$i]['line_item_id'];
        $line_item = commerce_line_item_load($line_item_id);
        $product_id = $line_item->commerce_product['und']['0']['product_id'];

        array_push($order_products, $product_id);
    }

    commerce_order_delete($order->order_id);

    foreach ($order_products as $order_product) {
        $mail_body = $user->field_name['und'][0]['value'] . ' ' . $user->field_sirname['und'][0]['value'] . ', вітання! ';
        $mail_body = $mail_body . 'Замовлення успішно підтверджено.</br>';

        $book = _bookbox_get_product_display_by_product_id($order_product, $bundle = 'product_display', $field_name = 'field_bookfields');

        $file = file_load($book->field_nni['und'][0]['fid']);
        $uri = $file->uri;
        $url = file_create_url($uri);

        $tid = $book->field_book_author['und'][0]['tid'];
        $author = taxonomy_term_load($tid);

        $order_book = array();
        $order_book['src'] =  $GLOBALS['base_root'].'/node/' . $book->nid;
        $order_book['img_src'] = $url;
        $order_book['author'] = $author->name;
        $order_book['title'] = $book->title;

        $mail_body = $mail_body . '<div style="display:inline-block; width:200px; margin-top:20px; margin-bottom:20px;">' . '<a href="'.$GLOBALS['base_root'].'/node/' . $book->nid .'">
        <img src = "' . $url . '" width="167" height="250" style="display:block; />'
            . $book->title . '<br/>' . $author->name .'</a> </div>';

        $order = commerce_order_new($user->uid, 'checkout_checkout');

        $product = commerce_product_load($order_product);
        $line_item = commerce_product_line_item_new($product, 1, $order->order_id);
        commerce_line_item_save($line_item);

        $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
        $order_wrapper->commerce_line_items[] = $line_item;

        commerce_order_save($order);
        commerce_order_status_update($order, 'completed', $skip_save = FALSE, $revision = NULL, $log = '');

        //todo: delete from test
        db_update('commerce_order')
            ->fields(array('created' => $time))
            ->fields(array('changed' => $time))
            ->condition('order_id', $order->order_id)
            ->execute();

        db_update('commerce_order_revision')
            ->fields(array('revision_timestamp' => $time))
            ->condition('order_id', $order->order_id)
            ->execute();

        $node = _bookbox_get_product_display_by_product_id($order_product);
        bookbox_node_update($node);

        $mail_body = '<div>' . $mail_body . '<div style="clear:both;"></div>Деталі щодо доставки буде надіслано окремо. <br /><br />Команда Book Box. <br /><br /><span style="font-size:12px;">Це автоматичне повідомлення, будь ласка, не відповідайте на нього.</span>' . '</div>';

        $params['subject'] = 'Ваше замовлення';
        $params['content'] = $mail_body;

        $params['img1'] = '<a href="'.$order_book['src'].'"><img alt = "" src = "' . $order_book['img_src'] . '" style = "max-width:1626px;" class="mcnImage" width = "264" ></a>';
        $params['merge_vars']['FNAME'] = $user->field_name['und']['0']['value'];
        $params['merge_vars']['FULLNAME'] = $user_name;
        $params['merge_vars']['BTITLE1'] = $book->title;
        $params['merge_vars']['BAUTHOR1'] = $order_book['author'];
        $params['merge_vars']['BURL1'] =  $order_book['src'];
        $params['name'] = $user->field_name['und']['0']['value'];

        bookbox_mail_send('bookbox', 'book_box_order', $user->mail, $params);
    }

    $dest = drupal_get_destination();
    drupal_goto($dest);
}

//
function bookbox_confirm_box_old($arg0) {
    $user = user_load($arg0);
    $user_name = $user->field_name['und'][0]['value'] . ' ' . $user->field_sirname['und'][0]['value'];
    $mail_body = $user->field_name['und'][0]['value'] . ' ' . $user->field_sirname['und'][0]['value'] . ', вітання! ';
    $mail_body = $mail_body . 'Замовлення успішно підтверджено.</br>';

    $order = commerce_cart_order_load($user->uid);
    $order_count = count($order->commerce_line_items['und']);

    $product_id2 = '';

    // 1. запомним второй товар
    if($order_count == 2) {
        $line_item_id2 = $order->commerce_line_items['und'][1]['line_item_id'];
        $line_item2 = commerce_line_item_load($line_item_id2); // второй товар
        $product_id2 = $line_item2->commerce_product['und']['0']['product_id'];
        $book2 = _bookbox_get_product_display_by_product_id($product_id2, $bundle = 'product_display', $field_name = 'field_bookfields');

        $file = file_load($book2->field_nni['und'][0]['fid']);
        $uri = $file->uri;
        $url = file_create_url($uri);

        $tid = $book2->field_book_author['und'][0]['tid'];
        $author = taxonomy_term_load($tid);

        $order_book2 = array();
        $order_book2['src'] =  $GLOBALS['base_root'].'/node/' . $book2->nid;
        $order_book2['img_src'] = $url;
        $order_book2['author'] = $author->name;
        $order_book2['title'] = $book2->title;

        $mail_body = $mail_body . '<div style="display:inline-block; width:200px; margin-top:20px; margin-bottom:20px;">' . '<a href="'.$GLOBALS['base_root'].'/node/' . $book2->nid .'">
        <img src = "' . $url . '" width="167" height="250" style="display:block; />'
            . $book2->title . '<br/>' . $author->name .'</a> </div>';

        //2. удалим второй товар
        commerce_cart_order_product_line_item_delete($order, $line_item_id2);
    }

    //3. проапдейтим статус первого товара
    $line_item_id1 = $order->commerce_line_items['und'][0]['line_item_id'];
    $line_item1 = commerce_line_item_load($line_item_id1); // второй товар
    $product_id1 = $line_item1->commerce_product['und']['0']['product_id'];
    $book1 = _bookbox_get_product_display_by_product_id($product_id1, $bundle = 'product_display', $field_name = 'field_bookfields');

    $file = file_load($book1->field_nni['und'][0]['fid']);
    $uri = $file->uri;
    $url = file_create_url($uri);

    $tid = $book1->field_book_author['und'][0]['tid'];
    $author = taxonomy_term_load($tid);

    $order_book1 = array();
    $order_book1['src'] =  $GLOBALS['base_root'].'/node/' . $book1->nid;
    $order_book1['img_src'] = $url;
    $order_book1['author'] = $author->name;
    $order_book1['title'] = $book1->title;

    $mail_body = $mail_body . '<div style="display:inline-block; width:200px; margin-top:20px; margin-bottom:20px;">' . '<a href="'.$GLOBALS['base_root'].'/node/' . $book1->nid .'">
    <img src = "' . $url . '" width="167" height="250" style="display:block;" />'
        . $book1->title . '<br/>' . $author->name .
        '</a> </div>'; //todo domain

    commerce_order_status_update($order, 'completed', $skip_save = FALSE, $revision = NULL, $log = '');
    $node = _bookbox_get_product_display_by_product_id($product_id1);
    bookbox_node_update($node);

    //4. добавим второй товар в корзину
    if($order_count == 2) {
        $order = commerce_order_new($user->uid, 'checkout_checkout');
        commerce_order_save($order);

        $product = commerce_product_load($product_id2);
        $line_item = commerce_product_line_item_new($product, 1, $order->order_id);
        commerce_line_item_save($line_item);

        $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
        $order_wrapper->commerce_line_items[] = $line_item;
        commerce_order_save($order);

        //5. проапдейтим статус второго товара
        commerce_order_status_update($order, 'completed', $skip_save = FALSE, $revision = NULL, $log = '');
        $node = _bookbox_get_product_display_by_product_id($product_id2);
        bookbox_node_update($node);
    }

    $mail_body = '<div>' . $mail_body . '<div style="clear:both;"></div>Деталі щодо доставки буде надіслано окремо. <br /><br />Команда Book Box. <br /><br /><span style="font-size:12px;">Це автоматичне повідомлення, будь ласка, не відповідайте на нього.</span>' . '</div>';

    //6. Пошлем емейл

    $params['subject'] = 'Ваше замовлення |' . ua_month_original();
    $params['content'] = $mail_body;
    $params['img1'] = '<a href="'.$order_book1['src'].'"><img alt = "" src = "' . $order_book1['img_src'] . '" style = "max-width:1626px;" class="mcnImage" width = "264" ></a>';
    $params['img2'] = '<a href="'.$order_book2['src'].'"><img alt = "" src = "' . $order_book2['img_src'] . '" style = "max-width:1626px;" class="mcnImage" width = "264" ></a>';
    $params['merge_vars']['FNAME'] = $user->field_name['und']['0']['value'];
    $params['merge_vars']['FULLNAME'] = $user_name;
    $params['merge_vars']['BTITLE1'] = $book1->title;
    $params['merge_vars']['BTITLE2'] = $book2->title;
    $params['merge_vars']['BAUTHOR1'] = $order_book1['author'];
    $params['merge_vars']['BAUTHOR2'] = $order_book2['author'];
    $params['merge_vars']['BURL1'] =  $order_book1['src'];
    $params['merge_vars']['BURL2'] = $order_book2['src'];
    $params['name'] = $user->field_name['und']['0']['value'];
    bookbox_mail_send('bookbox', 'book_box_order', $user->mail, $params);

    $dest = drupal_get_destination();
    drupal_goto($dest);
}